/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void activateAlarmSystem()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton1()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton2()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton3()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton4()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton5()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton6()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton7()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton8()
    {
        // Override and implement this function in Screen1
    }
    virtual void clickButton9()
    {
        // Override and implement this function in Screen1
    }
    virtual void preventActivationAlarmSystem()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ScalableImage scalableImagePin;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button5;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button6;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button7;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button8;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  button9;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  buttonActivate;
    touchgfx::TextArea textAreaActivate;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea6;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea7;
    touchgfx::TextArea textArea8;
    touchgfx::TextArea textArea9;
    touchgfx::TextAreaWithOneWildcard textAreaCountdownAlarmSet;
    touchgfx::Image imagePolice;
    touchgfx::TextAreaWithOneWildcard textAreaPin;
    touchgfx::Image imageError;
    touchgfx::TextAreaWithOneWildcard textAreaCountdownOngoingAlarmSet;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  buttonPreventActivation;
    touchgfx::TextArea textAreaPreventActivation;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREACOUNTDOWNALARMSET_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaCountdownAlarmSetBuffer[TEXTAREACOUNTDOWNALARMSET_SIZE];
    static const uint16_t TEXTAREAPIN_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textAreaPinBuffer[TEXTAREAPIN_SIZE];
    static const uint16_t TEXTAREACOUNTDOWNONGOINGALARMSET_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaCountdownOngoingAlarmSetBuffer[TEXTAREACOUNTDOWNONGOINGALARMSET_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN1VIEWBASE_HPP
